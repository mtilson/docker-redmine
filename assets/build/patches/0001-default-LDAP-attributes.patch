From d959c0cf6e19bc537007954de48884a88adc750f Mon Sep 17 00:00:00 2001
From: mtilson <m@tilson.biz>
Date: Sat, 16 Jul 2022 00:45:11 -0500
Subject: [PATCH] default LDAP attributes

---
 app/models/auth_source_ldap.rb | 68 +++++++++++++++++++++++++++++++---
 1 file changed, 62 insertions(+), 6 deletions(-)

diff --git a/app/models/auth_source_ldap.rb b/app/models/auth_source_ldap.rb
index 5c87686..58d34f2 100644
--- a/app/models/auth_source_ldap.rb
+++ b/app/models/auth_source_ldap.rb
@@ -47,6 +47,18 @@ class AuthSourceLdap < AuthSource
     :ldaps_verify_peer
   ]
 
+  cattr_accessor :use_display_name
+  @@use_display_name = Redmine::Configuration['ldap_onthefly_use_display_name'] || ''
+  # self.class.use_display_name
+
+  cattr_accessor :mail_default_attr
+  @@mail_default_attr = Redmine::Configuration['ldap_onthefly_mail_default_attr'] || ''
+  # self.class.mail_default_attr
+
+  cattr_accessor :mail_domain_suffix
+  @@mail_domain_suffix = Redmine::Configuration['ldap_onthefly_mail_domain_suffix'] || ''
+  # self.class.mail_domain_suffix
+
   def initialize(attributes=nil, *args)
     super
     self.port = 389 if self.port == 0
@@ -99,7 +111,7 @@ class AuthSourceLdap < AuthSource
     ldap_con = initialize_ldap_con(self.account, self.account_password)
     ldap_con.search(:base => self.base_dn,
                     :filter => search_filter,
-                    :attributes => ['dn', self.attr_login, self.attr_firstname, self.attr_lastname, self.attr_mail],
+                    :attributes => search_attributes_all,
                     :size => 10) do |entry|
       attrs = get_user_attributes_from_ldap_entry(entry)
       attrs[:login] = AuthSourceLdap.get_attr(entry, self.attr_login)
@@ -193,11 +205,45 @@ class AuthSourceLdap < AuthSource
   end
 
   def get_user_attributes_from_ldap_entry(entry)
+    firstname = AuthSourceLdap.get_attr(entry, self.attr_firstname)
+    if firstname.nil? || firstname.empty?
+      if self.class.use_display_name.present? && self.class.use_display_name == true
+        firstname = AuthSourceLdap.get_attr(entry, 'displayName').split(' ')[0]
+        logger.debug "Got firstname using LDAP search with 'displayName': '#{firstname}'" if logger && logger.debug?
+      end
+    end
+
+    lastname = AuthSourceLdap.get_attr(entry, self.attr_lastname)
+    if lastname.nil? || lastname.empty?
+      if self.class.use_display_name.present? && self.class.use_display_name == true
+        lastname = AuthSourceLdap.get_attr(entry, 'displayName').split(' ')[-1]
+        logger.debug "Got lastname using LDAP search with 'displayName': '#{lastname}'" if logger && logger.debug?
+      end
+    end
+
+    mail = AuthSourceLdap.get_attr(entry, self.attr_mail)
+    logger.debug "Got mail address using LDAP search with '#{self.attr_mail}': '#{mail}'" if logger && logger.debug?
+
+    if mail.nil? || mail.empty?
+      if self.class.mail_default_attr.present? && !self.class.mail_default_attr.nil?
+        mail = AuthSourceLdap.get_attr(entry, self.class.mail_default_attr)
+        logger.debug "Got mail address using LDAP search with '#{self.class.mail_default_attr}': '#{mail}'" if logger && logger.debug?
+
+        unless mail =~ /\A\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,})+\z/i
+          if self.class.mail_domain_suffix.present? && !self.class.mail_domain_suffix.nil?
+            mail = mail.split('@')[0] + '@' + self.class.mail_domain_suffix
+            logger.debug "Use domain suffix '#{self.class.mail_domain_suffix}' to form mail address: '#{mail}'" if logger && logger.debug?
+          end
+        end
+      end
+    end
+    logger.debug "Final mail address is: '#{mail}'" if logger && logger.debug?
+
     {
       :dn => entry.dn,
-      :firstname => AuthSourceLdap.get_attr(entry, self.attr_firstname),
-      :lastname => AuthSourceLdap.get_attr(entry, self.attr_lastname),
-      :mail => AuthSourceLdap.get_attr(entry, self.attr_mail),
+      :firstname => firstname,
+      :lastname => lastname,
+      :mail => mail,
       :auth_source_id => self.id
     }
   end
@@ -206,12 +252,22 @@ class AuthSourceLdap < AuthSource
   # include the user attributes if on-the-fly registration is enabled
   def search_attributes
     if onthefly_register?
-      ['dn', self.attr_firstname, self.attr_lastname, self.attr_mail]
+      search_attributes_all
     else
       ['dn']
     end
   end
 
+  # Return all necessary LDAP attributes
+  def search_attributes_all
+    if self.class.mail_default_attr.present? && !self.class.mail_default_attr.nil?
+      logger.debug "Adding '#{self.class.mail_default_attr}' to a set of LDAP search attributes" if logger && logger.debug?
+      ['dn', self.attr_login, self.attr_firstname, self.attr_lastname, self.attr_mail, 'displayName', self.class.mail_default_attr.to_s.strip]
+    else
+      ['dn', self.attr_login, self.attr_firstname, self.attr_lastname, self.attr_mail, 'displayName']
+    end
+  end
+
   # Check if a DN (user record) authenticates with the password
   def authenticate_dn(dn, password)
     if dn.present? && password.present?
@@ -231,7 +287,7 @@ class AuthSourceLdap < AuthSource
     search_filter = base_filter & Net::LDAP::Filter.eq(self.attr_login, login)
     ldap_con.search( :base => self.base_dn,
                      :filter => search_filter,
-                     :attributes=> search_attributes) do |entry|
+                     :attributes => search_attributes) do |entry|
       if onthefly_register?
         attrs = get_user_attributes_from_ldap_entry(entry)
       else
-- 
2.30.2

